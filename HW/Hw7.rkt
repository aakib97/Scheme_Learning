#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.7 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 87 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 63 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 190 190 190 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 107 142 35 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 100 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 100 149 237 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 65 105 225 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 70 130 180 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 47 79 79 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 139 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 75 0 130 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 160 32 240 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 250 128 114 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 184 134 11 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 128 128 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 169 169 169 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 0 0 0 0 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 228 225 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 224 255 255 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 1496 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 5 #"right"
0 0 24 3 2 #")("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 5 #"right"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 3 #") ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Problem 1"
0 0 24 29 1 #"\n"
0 0 19 3 11 #"\"problem 1\""
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"tree-equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 3 4 #"  (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 3 #")) "
0 0 19 3 7 #"\"equal\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 3 #"xor"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 3 #")) "
0 0 19 3 11 #"\"not equal\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 11 #"tree-equal?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 11 #"tree-equal?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 4 #"))) "
0 0 19 3 11 #"\"not equal\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"tree1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 5 #"()) ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"tree2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 5 #"()) ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"tree-equal?"
0 0 24 3 1 #" "
0 0 14 3 5 #"tree1"
0 0 24 3 1 #" "
0 0 14 3 5 #"tree2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";returns \"equal\""
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"tree3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 5 #"()) ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"tree-equal?"
0 0 24 3 1 #" "
0 0 14 3 5 #"tree1"
0 0 24 3 1 #" "
0 0 14 3 5 #"tree3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";returns \"not equal"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Problem 2"
0 0 24 29 1 #"\n"
0 0 19 3 11 #"\"Problem 2\""
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 3 #")) "
0 0 14 3 1 #"T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       (("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-tree"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #")("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 3 #"))("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       (("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-tree"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #")("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #")("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"insert-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"insert"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #") ("
0 0 14 3 11 #"insert-list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 14 3 1 #"T"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"sort-extract"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 12 #"sort-extract"
0 0 24 3 2 #" ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 12 #"sort-extract"
0 0 24 3 2 #" ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"tree-sort"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 2 #")("
0 0 14 3 12 #"sort-extract"
0 0 24 3 2 #" ("
0 0 14 3 11 #"insert-list"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 6 #"()))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"tree-sort"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";returns (1 2 3 4 5 6 7 8 9 10)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Problem 3"
0 0 24 29 1 #"\n"
0 0 19 3 11 #"\"Problem 3\""
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cons2"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"max-in-tree"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 3 #"max"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"cons2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"max-in-tree"
0 0 24 3 2 #" ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"cons2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"max-in-tree"
0 0 24 3 2 #" ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"delete-node"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       (("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-tree"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 3 #") ("
0 0 14 3 11 #"delete-node"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       (("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-tree"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 3 #") ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 3 #") ("
0 0 14 3 11 #"delete-node"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 6 #")))) ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 6 #")))) ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-tree"
0 0 24 3 2 #" ("
0 0 14 3 11 #"max-in-tree"
0 0 24 3 2 #" ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"delete-node"
0 0 24 3 2 #" ("
0 0 14 3 11 #"max-in-tree"
0 0 24 3 2 #" ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 3 #"))("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              )"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        )"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"delete-node"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"() ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())) "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";returns (8 (5 () ()) (11 () ()))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Problem 4"
0 0 24 29 1 #"\n"
0 0 19 3 1 #"\""
0 0 19 3 7 #"Problem"
0 0 19 3 2 #" 4"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"tree-map"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 9 #"make-tree"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"tree-map"
0 0 24 3 2 #" ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #") "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 8 #"tree-map"
0 0 24 3 2 #" ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #") "
0 0 14 3 1 #"f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"tree-map"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 5 #"()) ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 6 #"())) ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";returns (4 (1 () ())(9 () ())) which is the sqaure of (2 (1 () ())("
 #"3 () ()))"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Problem 5"
0 0 24 29 1 #"\n"
0 0 19 3 1 #"\""
0 0 19 3 7 #"Problem"
0 0 19 3 2 #" 5"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"arithmeticTree"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 5 #"))) ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 48 #"))                                              "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #") "
0 0 19 3 2 #"\"/"
0 0 19 3 1 #"\""
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 2 #" ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #") "
0 0 19 3 1 #"\""
0 0 19 3 2 #"-\""
0 0 24 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 2 #" ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       (("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #") "
0 0 21 3 3 #"#\\/"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 14 #"arithmeticTree"
0 0 24 3 2 #" ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"arithmeticTree"
0 0 24 3 2 #" ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       (("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #") "
0 0 21 3 3 #"#\\*"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 14 #"arithmeticTree"
0 0 24 3 2 #" ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"arithmeticTree"
0 0 24 3 2 #" ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"example"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\+"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\*"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 4 #"())("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\*"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\/"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-tree"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #"))) "
0 0 17 3 26 #";what the answer should be"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";returns "
0 8          10 17 5 #"20/3\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"arithmeticTree"
0 0 24 3 1 #" "
0 0 14 3 7 #"example"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";returns "
0 8          10 17 5 #"20/3\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Problem 6"
0 0 24 29 1 #"\n"
0 0 19 3 11 #"\"Problem 6\""
0 0 24 29 1 #"\n"
0 0 17 3 7 #";part a"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"list2string"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 19 3 2 #"\"\""
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #")("
0 0 14 3 11 #"list2string"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"extract1"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 8 #"extract1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 8 #"extract1"
0 0 24 3 2 #" ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"prepare"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       (("
0 0 14 3 5 #"char?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 6 #"string"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 3 1 #" "
0 0 24 3 1 #" "
0 0 24 3 6 #"    (("
0 0 14 3 7 #"string?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 6 #"string"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"tree-to-string"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #")("
0 0 14 3 8 #"tree-map"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 14 3 7 #"prepare"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"preorder"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #")("
0 0 14 3 11 #"list2string"
0 0 24 3 1 #"("
0 0 14 3 8 #"extract1"
0 0 24 3 1 #"("
0 0 14 3 14 #"tree-to-string"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"preorder"
0 0 24 3 1 #" "
0 0 14 3 7 #"example"
0 0 24 3 2 #") "
0 0 17 3 24 #";previously created tree"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";returns \""
0 0 17 3 9 #"+*23*4/6\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";part b"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"extract2"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 8 #"extract2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 8 #"extract2"
0 0 24 3 2 #" ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"postorder"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #")("
0 0 14 3 11 #"list2string"
0 0 24 3 1 #"("
0 0 14 3 8 #"extract2"
0 0 24 3 1 #"("
0 0 14 3 14 #"tree-to-string"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"postorder"
0 0 24 3 1 #" "
0 0 14 3 7 #"example"
0 0 24 3 2 #") "
0 0 17 3 29 #";same previously created tree"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";returns \""
0 0 17 3 9 #"23*46/*+\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";part c"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"extract3"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 8 #"extract3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 8 #"extract3"
0 0 24 3 2 #" ("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"infix"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #")("
0 0 14 3 11 #"list2string"
0 0 24 3 1 #"("
0 0 14 3 8 #"extract3"
0 0 24 3 1 #"("
0 0 14 3 14 #"tree-to-string"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"infix"
0 0 24 3 1 #" "
0 0 14 3 7 #"example"
0 0 24 3 1 #")"
0           0
